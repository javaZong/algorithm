一般二叉树的问题都是在考二叉树的遍历

遍历二叉树
前序遍历  头节点 左节点 右

中序遍历  左 头 右
特点：
一定是非降序排序的
可解问题：
1、获取树的深度，
2、判断书是否是一个二叉搜索树，

后序遍历：左右头

层序遍历
可解决问题：
1、获取书的宽度
2、判断书是否是一个完全二叉树，或者满二叉树


树型DP问题

递归
问左子树要信息
问右子树要信息
综合比较树节点信息，然后放回当前节点的信息
信息=Object对象，包含你所要信息（属性）

public static Object f(Node x){
if(x == null) {return new Object(xx,xxx,xx)};
视问题视情况，是否要特殊处理叶子节点
Info leftData = f(x.left);
Info rightData = f(x.right);
聚合leftData和rightData 成新的Info
return NEW Object
}
